<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="amqp_host">localhost</parameter>
        <parameter key="amqp_port">5672</parameter>
        <parameter key="amqp_username">guest</parameter>
        <parameter key="amqp_password">guest</parameter>
    </parameters>

    <services>
        <service id="command_gateway" alias="simgroep_event_sourcing.command_gateway" />
        <service id="queue_registry" alias="simgroep_event_sourcing.messaging.queue_registry" />
        <service id="queue_factory" alias="simgroep_event_sourcing.messaging.queue_factory" />
        
        <service id="simgroep_event_sourcing.command_gateway" class="Simgroep\EventSourcing\CommandHandling\CommandGateway">
            <argument type="service" id="broadway.command_handling.simple_command_bus" />
            <argument type="service" id="simgroep_event_sourcing.command_gateway.scheduler" />
        </service>
        
        <service id="simgroep_event_sourcing.command_gateway.scheduler" class="Simgroep\EventSourcing\CommandHandling\IntervalScheduler">
            <argument>50000</argument>
            <argument>100</argument>
        </service>
        
        <service id="simgroep_event_sourcing.repository.lock_manager" class="Simgroep\EventSourcing\Repository\PessimisticLockManager">
            <argument type="service">
                <service class="NinjaMutex\Lock\MySqlLock">
                    <argument>%database_user%</argument>
                    <argument>%database_password%</argument>
                    <argument>%database_host%</argument>
                </service>
            </argument>
        </service>
        
        <service id="simgroep_event_sourcing.locking_repository" class="Simgroep\EventSourcing\Repository\LockingRepository"
                 factory-service="simgroep_event_sourcing.locking_repository_factory"
                 factory-method="build"
                 abstract="true">
        </service>
        <service id="simgroep_event_sourcing.locking_repository_factory" class="Simgroep\EventSourcing\Repository\LockingRepositoryFactory">
            <argument type="service" id="simgroep_event_sourcing.repository.lock_manager" />
            <argument type="service" id="broadway.event_store" />
            <argument type="service" id="broadway.event_handling.event_bus" />
            <argument type="service">
                <service class="Broadway\EventSourcing\AggregateFactory\PublicConstructorAggregateFactory" />
            </argument>
        </service>

        <service id="simgroep_event_sourcing.messaging.queue_registry" class="Simgroep\EventSourcing\Messaging\ArrayQueueRegistry" />
        <service id="simgroep_event_sourcing.messaging.queue_factory" class="Simgroep\EventSourcing\Messaging\AMQPQueueFactory">
            <argument type="service" id="spray_serializer" />
            <argument type="service" id="simgroep_event_sourcing.messaging.amqp_connection" />
        </service>

        <service id="simgroep_event_sourcing.messaging.amqp_connection" class="PhpAmqpLib\Connection\AMQPStreamConnection">
            <argument>%amqp_host%</argument>
            <argument>%amqp_port%</argument>
            <argument>%amqp_username%</argument>
            <argument>%amqp_password%</argument>
        </service>

        <service id="simgroep_event_sourcing.serializer.domain_message" class="Simgroep\EventSourcing\EventSourcingBundle\Serializer\DomainMessageSerializer">
            <tag name="spray_serializer" />
        </service>
        <service id="simgroep_event_sourcing.serializer.domain_event_stream" class="Simgroep\EventSourcing\EventSourcingBundle\Serializer\DomainEventStreamSerializer">
            <tag name="spray_serializer" />
        </service>

        <service id="sim.event_store.replay" class="Simgroep\EventSourcing\EventSourcingBundle\Infrastructure\Replay">
            <argument type="service" id="doctrine.dbal.default_connection" />
            <argument type="service" id="broadway.serializer.metadata" />
            <argument type="service" id="broadway.serializer.payload" />
            <argument>events</argument>
        </service>

        <service id="sim.projector.registry" class="Simgroep\EventSourcing\EventSourcingBundle\ProjectorRegistry\ProjectorRegistry" />
    </services>
</container>
